cluster_name: '{{ cassandra_cluster_name }}'

num_tokens: 256

hinted_handoff_enabled: true
max_hint_window_in_ms: 10800000 # 3 hours
hinted_handoff_throttle_in_kb: 1024
max_hints_delivery_threads: 2

# How often hints should be flushed from the internal buffers to disk.
# Will *not* trigger fsync.
hints_flush_period_in_ms: 10000

# Maximum size for a single hints file, in megabytes.
max_hints_file_size_in_mb: 128

# Maximum throttle in KBs per second, total. This will be
# reduced proportionally to the number of nodes in the cluster.
batchlog_replay_throttle_in_kb: 1024

authenticator: {{ cassandra_authenticator }}
authorizer: AllowAllAuthorizer
role_manager: CassandraRoleManager
roles_validity_in_ms: 2000
permissions_validity_in_ms: 2000
# credentials_validity_in_ms: 2000
partitioner: org.apache.cassandra.dht.Murmur3Partitioner

# directories
data_file_directories: [{{ cassandra_data_path }}/data]
commitlog_directory:    {{ cassandra_data_path }}/commitlog
saved_caches_directory: {{ cassandra_data_path }}/saved_caches
hints_directory:        {{ cassandra_data_path }}/hints

disk_failure_policy: stop
commit_failure_policy: stop

key_cache_size_in_mb: "{{ cassandra_key_cache_size_in_mb }}"

key_cache_save_period: 14400 # 4 hours
# Disabled by default, meaning all keys are going to be saved
# key_cache_keys_to_save: 100

# emtpy mean "auto": min(2.5% of Heap (in MB), 50MB)
counter_cache_size_in_mb:
counter_cache_save_period: 7200

row_cache_size_in_mb: 0
row_cache_save_period: 0
# Disabled by default, meaning all keys are going to be saved
# row_cache_keys_to_save: 100

commitlog_sync: periodic
commitlog_sync_period_in_ms: 10000
# commitlog_periodic_queue_size:

commitlog_segment_size_in_mb: 32

seed_provider:
    - class_name: org.apache.cassandra.locator.SimpleSeedProvider
      parameters:
        - seeds: "{{ cassandra_seed_resolved }}"

concurrent_reads: {{ cassandra_concurrent_reads }}
concurrent_writes: {{ cassandra_concurrent_writes }}

# Total memory to use for sstable-reading buffers.  Defaults to
# the smaller of 1/4 of heap or 512MB.
# file_cache_size_in_mb: 512

# Total memory to use for memtables.  Cassandra will flush the largest
# memtable when this much memory is used.
# If omitted, Cassandra will set it to 1/3 of the heap.
# memtable_total_space_in_mb: 2048

# Total space to use for commitlogs.  Since commitlog segments are
# mmapped, and hence use up address space, the default size is 32
# on 32-bit JVMs, and 1024 on 64-bit JVMs.
#
# If space gets above this value (it will round up to the next nearest
# segment multiple), Cassandra will flush every dirty CF in the oldest
# segment and remove it.  So a small total commitlog space will tend
# to cause more flush activity on less-active columnfamilies.
# commitlog_total_space_in_mb: 4096

# This sets the amount of memtable flush writer threads.  These will
# be blocked by disk io, and each one will hold a memtable in memory
# while blocked. If you have a large heap and many data directories,
# you can increase this value for better flush performance.
# By default this will be set to the amount of data directories defined.
#memtable_flush_writers: 1

trickle_fsync: false
trickle_fsync_interval_in_kb: 10240

storage_port: {{ cassandra_storage_port }}
ssl_storage_port: {{ cassandra_ssl_storage_port }}

listen_interface: {{ cassandra_network_interface }}

# empty sets it to listen_address
# NOTE: multi-region (EC2MultiRegionSnitch) requires this to be set to the
# public IP of the instance
broadcast_address:

internode_authenticator: org.apache.cassandra.auth.AllowAllInternodeAuthenticator

start_native_transport: true
native_transport_port: {{ cassandra_native_transport_port }}
native_transport_max_threads: 128

start_rpc: true
rpc_interface: {{ cassandra_network_interface }}
rpc_port: {{ cassandra_rpc_port }}
rpc_keepalive: true
rpc_server_type: hsha
rpc_min_threads: 0
rpc_max_threads: 32
thrift_framed_transport_size_in_mb: 15

incremental_backups: true

snapshot_before_compaction: false
auto_snapshot: true

tombstone_warn_threshold: 1000
tombstone_failure_threshold: 100000

column_index_size_in_kb: 64

# concurrent_compactors defaults to the number of cores.
#concurrent_compactors: 1
compaction_throughput_mb_per_sec: 16

# When unset, the default is 200 Mbps or 25 MB/s.
# stream_throughput_outbound_megabits_per_sec: 200

read_request_timeout_in_ms: 5000
range_request_timeout_in_ms: 10000
write_request_timeout_in_ms: 2000
cas_contention_timeout_in_ms: 1000
truncate_request_timeout_in_ms: 60000
request_timeout_in_ms: 10000

cross_node_timeout: true

streaming_socket_timeout_in_ms: 0

# phi value that must be reached for a host to be marked down.
# most users should never need to adjust this.
# phi_convict_threshold: 8

endpoint_snitch: "{{ cassandra_snitch }}"
dynamic_snitch_update_interval_in_ms: 100
dynamic_snitch_reset_interval_in_ms: 600000
dynamic_snitch_badness_threshold: 0.1

request_scheduler: org.apache.cassandra.scheduler.NoScheduler

server_encryption_options:
    internode_encryption: none
    keystore: conf/.keystore
    keystore_password: cassandra
    truststore: conf/.truststore
    truststore_password: cassandra
    # More advanced defaults below:
    # protocol: TLS
    # algorithm: SunX509
    # store_type: JKS
    # cipher_suites: [TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA]
    # require_client_auth: false
client_encryption_options:
    enabled: false
    keystore: conf/.keystore
    keystore_password: cassandra
    # require_client_auth: false
    # Set trustore and truststore_password if require_client_auth is true
    # truststore: conf/.truststore
    # truststore_password: cassandra
    # More advanced defaults below:
    # protocol: TLS
    # algorithm: SunX509
    # store_type: JKS
    # cipher_suites: [TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA]

# can be:  all  - all traffic is compressed
#          dc   - traffic between different datacenters is compressed
#          none - nothing is compressed.
internode_compression: dc

inter_dc_tcp_nodelay: false
